name: Integration Tests
on:
  push:
  pull_request:
    branches:
      - 6.x
  schedule:
    # Run Monday/Thursday at 12:13 GMT
    - cron: '13 12 * * 1,4'
  workflow_dispatch:
    inputs:
      coreprurl:
        description: (optional) Core PR URL
        required: false
      drupal8prurl:
        description: (optional) Drupal 8 PR URL
        required: false

jobs:
  phpunit:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - drupal: '10.1.*'
            civicrm: '5.69.*'
            php: '8.1'
          - drupal: '10.2.*'
            civicrm: '5.74.*'
            php: '8.2'
          - drupal: '10.2.*'
            civicrm: '5.77.x-dev'
            php: '8.2'
          - drupal: '10.3.*'
            civicrm: 'dev-master'
            php: '8.3'
    name: Drupal ${{ matrix.drupal }} | CiviCRM ${{ matrix.civicrm }}
    # services:
    #   mysql:
    #     image: mysql:8.0
    #     env:
    #       MYSQL_ALLOW_EMPTY_PASSWORD: yes
    #       MYSQL_DATABASE: db
    #     ports:
    #       - 3306
    #     options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3 --tmpfs /var/lib/mysql --skip-log-bin
      # mysql:
      #   #image: mysql:8.0
      #   image: mariadb:11.4
      #   env:
      #     MARIADB_ALLOW_EMPTY_ROOT_PASSWORD: 1
      #     MARIADB_DATABASE: db
      #   ports:
      #     - 3306
      # /sys/firmware
      #   options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - name: WhoAmI
        run: |
          whoami
          cd ~/
          pwd
          touch test1
          ls -al .
          env
      - name: Create MySQL Docker container with ramdisk
        run: |
          /usr/bin/docker create --name mysql_${{ strategy.job-index }} -p 3306 --network host --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3 --tmpfs /var/lib/mysql -e "MYSQL_ALLOW_EMPTY_PASSWORD=yes" -e "MYSQL_DATABASE=db" -e GITHUB_ACTIONS=true -e CI=true mysql:8.0 --skip-log-bin
          /usr/bin/docker start mysql_${{ strategy.job-index }}
          /usr/bin/docker ps --all --filter id=mysql_${{ strategy.job-index }} --filter status=running --no-trunc --format "{{.ID}} {{.Status}}"
          /usr/bin/docker port mysql_${{ strategy.job-index }}
      - uses: actions/checkout@v4
      - uses: shivammathur/setup-php@v2
        with:
            php-version: ${{ matrix.php }}
            extensions: dom, curl, libxml, mbstring, zip, pdo, mysql, pdo_mysql, bcmath, soap, intl, gd, exif, iconv, libapache2-mod-php
            coverage: none
            tools: composer:v2
      - name: Get composer cache directory
        id: composercache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v4
        with:
            path: ${{ steps.composercache.outputs.dir }}
            key: ${{ runner.os }}-${{ matrix.drupal }}-composer-${{ hashFiles('**/composer.json') }}
            restore-keys: ${{ runner.os }}-composer-
      - name: Setup problem matchers for PHPUnit
        run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"
      # Notes
      # - Must enable patching for civicrm/civicrm-core
      # - CiviCRM requires `compile-mode: all`
      - name: Setup sendmail
        run: |
          sudo apt-get update
          sudo apt-get install sendmail
      # Temp thing
      # - name: Install Chrome/Chromedriver
      #   run: |
      #     mkdir /tmp/chrome
      #     cd /tmp/chrome
      #     wget https://storage.googleapis.com/chrome-for-testing-public/129.0.6668.58/linux64/chrome-linux64.zip
      #     unzip chrome-linux64.zip
      #     ln -sf /tmp/chrome/chrome-linux64/chrome /usr/local/bin/
      #     mkdir /tmp/chromedriver
      #     cd /tmp/chromedriver
      #     wget https://storage.googleapis.com/chrome-for-testing-public/129.0.6668.58/linux64/chromedriver-linux64.zip
      #     unzip chromedriver-linux64.zip
      #     ln -sf /tmp/chromedriver/chromedriver-linux64/chromedriver /usr/local/bin/
      #     chromedriver --port=9515 &
      - name: Downgrade chrome
        run: |
          curl -L -o chrome.deb http://dl.google.com/linux/chrome/deb/pool/main/g/google-chrome-stable/google-chrome-stable_127.0.6533.119-1_amd64.deb
          sudo apt-get install libu2f-udev
          sudo dpkg -i chrome.deb
          google-chrome-stable --version
      - name: Setup Drupal
        run: |
          COMPOSER_MEMORY_LIMIT=-1 composer create-project drupal/recommended-project:${{ matrix.drupal }} ~/drupal --no-interaction --no-install
          cd ~/drupal
          composer config extra.enable-patching true
          composer config extra.compile-mode all
          composer config minimum-stability dev
          composer config prefer-stable true
          composer config preferred-install auto
          composer config allow-plugins.civicrm/composer-compile-plugin true
          composer config allow-plugins.civicrm/composer-downloads-plugin true
          composer config allow-plugins.civicrm/civicrm-asset-plugin true
          composer config allow-plugins.cweagans/composer-patches true
          composer config allow-plugins.dealerdirect/phpcodesniffer-composer-installer true
          # Note in composer v2 the order is more important. We want the path one to have higher priority.
          composer config repositories.0 composer https://packages.drupal.org/8
          composer config repositories.1 path $GITHUB_WORKSPACE
          composer install --no-interaction
          COMPOSER_MEMORY_LIMIT=-1 composer require drupal/core-dev-pinned:${{ matrix.drupal }}
      - name: Setup Ping Diagnostics
        run: |
          mkdir -p /home/runner/drupal/web/sites/simpletest/browser_output/
          ping github.com > /home/runner/drupal/web/sites/simpletest/browser_output/ping_github.log &
          ping localhost > /home/runner/drupal/web/sites/simpletest/browser_output/ping_localhost.log &
          ping google.com > /home/runner/drupal/web/sites/simpletest/browser_output/ping_google.log &
          /usr/bin/docker ps -a
          uname -a
          df -h
      - name: Suppress links to screenshots
        # There's so many! They can be useful locally if running one test, but they aren't useful here and cause massive scrolling.
        run: |
          cd ~/drupal
          curl -L -O https://raw.githubusercontent.com/colemanw/webform_civicrm/def72b3dce1ea4bc7dd2cdd28a72844885727789/DrupalHtmlOutputTrait.diff
          git apply DrupalHtmlOutputTrait.diff
      - name: Install CiviCRM ${{ matrix.civicrm }}
        run: |
          cd ~/drupal
          COMPOSER_MEMORY_LIMIT=-1 composer require civicrm/civicrm-asset-plugin:'~1.1' civicrm/civicrm-{core,packages,drupal-8}:${{ matrix.civicrm }} -W
      - name: Download Webform
        run: |
          cd ~/drupal
          COMPOSER_MEMORY_LIMIT=-1 composer require 'drupal/webform:^6.2'
      - name: Install webform_civicrm
        run: |
          cd ~/drupal
          # We used the github action `checkout` plugin at the start to check out the PR branch, and then set up a composer virtual `path` repo earlier when setting up composer config. So this should pull from that repo not the real one.
          COMPOSER_MEMORY_LIMIT=-1 composer require drupal/webform_civicrm:@dev
      - name: Install token
        run: |
          cd ~/drupal
          COMPOSER_MEMORY_LIMIT=-1 composer require drupal/token:^1.11
      - name: Download some test helpers
        run: |
          cd ~/drupal
          COMPOSER_MEMORY_LIMIT=-1 composer require semperit/minkcivicrmhelpers
      - name: Set identity
        # Needed for `git am` but otherwise irrelevant
        run: |
          git config --global user.email "webform.civicrm@example.org"
          git config --global user.name "Webform CiviCRM"
      - name: Optionally Apply Core PR
        if: ${{ github.event.inputs.coreprurl != 0 }}
        run: |
          cd  ~/drupal/vendor/civicrm/civicrm-core
          curl -L -o prpatch.patch ${{ github.event.inputs.coreprurl }}.patch
          git am prpatch.patch
      - name: Optionally Apply Drupal 8 PR
        if: ${{ github.event.inputs.drupal8prurl != 0 }}
        run: |
          cd  ~/drupal/web/modules/contrib/civicrm
          curl -L -o prpatch.patch ${{ github.event.inputs.drupal8prurl }}.patch
          git am prpatch.patch
      - name: Do a fake temp install
        # so that we can use civi api to get extensions with a version appropriate to the installed civi version
        run: |
          cd ~/drupal
          composer require drush/drush
          mkdir -p /home/runner/civicrm-cv
          curl -L https://download.civicrm.org/cv/cv.phar -o /home/runner/civicrm-cv/cv
          chmod +x /home/runner/civicrm-cv/cv
          ./vendor/drush/drush/drush -y -l http://civi.localhost site-install standard --db-url='mysql://root:@127.0.0.1:${{ job.services.mysql.ports[3306] }}/fakedb' --site-name=FakeCivi
          chmod +w web/sites/default
          /home/runner/civicrm-cv/cv core:install --cms-base-url=http://civi.localhost
      - name: Download Civi extensions
        run: |
          mkdir -p ~/drupal/web/sites/default/files/civicrm/ext
          cd ~/drupal/web/sites/default/files/civicrm/ext
          # Allow "unapproved" extensions
          /home/runner/civicrm-cv/cv ev '\Civi::settings()->set("ext_repo_url", "https://civicrm.org/extdir/ver={ver}|cms={uf}|ready=");'
          /home/runner/civicrm-cv/cv ev '\Civi::settings()->set("http_timeout", 60);'
          # Apparently we have to install it, otherwise stripe gives a dependency error even with install=0. I think that's a bug, but let's just do it. This is a fake install anyway.

          # We frequently get "The CiviCRM public extensions directory at https://civicrm.org/extdir/[..] could not be contacted",
          # so retry try each extension download several times before giving up.
          function retry_if_fail {
            local command="$@"
            local max_retries=4
            local delay=30
            local retry_count=0
            while (( retry_count < max_retries )); do
              set +e; $command; retval=$?; set -e
              if [[ $retval -eq 0 ]]; then
                return 0
              fi
              (( ++retry_count ))
              if [[ $retry_count -lt $max_retries ]]; then
                echo "Download failed with $n tries remaining."
                sleep "$delay"
              fi
            done
            echo "Download failed all attempts!"
            return 1
          }

          retry_if_fail /home/runner/civicrm-cv/cv api3 Extension.download install=1 key=mjwshared
          retry_if_fail /home/runner/civicrm-cv/cv api3 Extension.download install=1 key=firewall
          retry_if_fail /home/runner/civicrm-cv/cv api3 Extension.download install=1 key=mjwpaymentapi
          retry_if_fail /home/runner/civicrm-cv/cv api3 Extension.download install=1 key=com.drastikbydesign.stripe
          retry_if_fail /home/runner/civicrm-cv/cv api3 Extension.download install=0 key=com.iatspayments.civicrm
          retry_if_fail /home/runner/civicrm-cv/cv api3 Extension.download install=0 key=com.aghstrategies.uscounties
          # temporary iats patches for undeclared vars
          cd com.iatspayments.civicrm
          curl -L -O https://patch-diff.githubusercontent.com/raw/iATSPayments/com.iatspayments.civicrm/pull/455.diff
          curl -L -O https://patch-diff.githubusercontent.com/raw/iATSPayments/com.iatspayments.civicrm/pull/456.diff
          curl -L -O https://patch-diff.githubusercontent.com/raw/iATSPayments/com.iatspayments.civicrm/pull/457.diff
          curl -L -O https://patch-diff.githubusercontent.com/raw/iATSPayments/com.iatspayments.civicrm/pull/458.diff
          git apply 455.diff
          git apply 456.diff
          git apply 457.diff
          git apply 458.diff
      - uses: nanasess/setup-chromedriver@master
        with:
          # temporary to match downgraded chrome
          chromedriver-version: '127.0.6533.119'
      - name: Create BROWSERTEST_OUTPUT_DIRECTORY
        run: |
          mkdir -p /home/runner/drupal/web/sites/simpletest/browser_output/
      # - name: Install Xvfb
      #   run: sudo apt-get install xvfb
      - name: Run chromedriver
        run: |
          #chromedriver --port=9515 --verbose &> /home/runner/drupal/web/sites/simpletest/browser_output/chromedriver.log &
          #export DISPLAY=:99
          #sudo Xvfb -ac :99 -screen 0 1280x1024x24 > /dev/null 2>&1 & # optional
          #sudo Xvfb -ac :99 -screen 0 1920x2048x24 > /dev/null 2>&1 & # optional
          chromedriver --port=4444 --verbose &> /home/runner/drupal/web/sites/simpletest/browser_output/chromedriver.log &
      - name: Run php built-in server
        run: PHP_CLI_SERVER_WORKERS=32 php -S 127.0.0.1:8080 -t ~/drupal/web &
      # - name: Patch Webdriver curl
      #   if: ${{ matrix.drupal != '10.3.*' }}
      #   run: |
      #     cat << 'EOF' > /tmp/patch1
      #     --- /home/bob/sites/mink2/vendor/instaclick/php-webdriver/lib/WebDriver/AbstractWebDriver.php   2023-12-07 23:11:19.000000000 -0800
      #     +++ /home/bob/sites/mink3/vendor/instaclick/php-webdriver/lib/WebDriver/AbstractWebDriver.phpX  2024-09-22 22:47:23.852676851 -0700
      #     @@ -102,6 +102,7 @@
      #           */
      #          protected function curl($requestMethod, $command, $parameters = null, $extraOptions = array())
      #          {
      #     +        usleep(50000); // Add a delay in desperate attempt to reduce random unexplained failures
      #              if ($parameters && is_array($parameters) && $requestMethod !== 'POST') {
      #                  throw WebDriverException::factory(
      #                      WebDriverException::NO_PARAMETERS_EXPECTED,
      #     EOF
      #     patch ~/drupal/vendor/instaclick/php-webdriver/lib/WebDriver/AbstractWebDriver.php /tmp/patch1 
      # - name: Install Apache web server
      #   run: |
      #     sudo apt update
      #     sudo apt install apache2
      #     cat << 'EOF' > /tmp/simpletest.conf
      #       Listen 8080
      #       <VirtualHost *:8080>
      #         ServerAdmin webmaster@localhost
      #         ServerName 127.0.0.1
      #         #ServerAlias www.your_domain
      #         DocumentRoot /home/runner/drupal/web
      #         <Directory "/home/runner/drupal/web">
      #           Options All
      #           AllowOverride All
      #           <IfModule mod_authz_host.c>
      #               Require all granted
      #           </IfModule>
      #         </Directory>
      #         ErrorLog ${APACHE_LOG_DIR}/error.log
      #         CustomLog ${APACHE_LOG_DIR}/access.log combined
      #       </VirtualHost>
      #     EOF
      #     sudo mv /tmp/simpletest.conf /etc/apache2/sites-available/simpletest.conf
      #     sudo bash -c 'echo -e \\nexport APACHE_RUN_USER=runner\\nexport APACHE_RUN_GROUP=runner\\n >> /etc/apache2/envvars'
      #     #sudo chown -R www-data:www-data /home/runner/drupal
      #     #sudo chmod -R 777 /home/runner/drupal
      #     sudo apt-get install libapache2-mod-php${{ matrix.php }}
      #     sudo a2ensite simpletest.conf
      #     sudo a2dissite 000-default.conf
      #     sudo a2dismod "php*"
      #     sudo a2enmod php${{ matrix.php }}
      #     sudo apache2ctl configtest #check for config errors
      #     sudo systemctl restart apache2
      #     sudo systemctl status apache2
      #     ps alx | grep apache
      #     cd /tmp
      #     wget http://127.0.0.1:8080 -O index1.php || echo 'wget http://127.0.0.1:8080 failed'
      #     cat index1.php
      #     cat /var/log/apache2/error.log
      #     cat /var/log/apache2/access.log
      # - name: Patch Mink loop delay
      #   run: sed -i -Ee 's/usleep\(10000\)/usleep(100000)/' ~/drupal/vendor/behat/mink/src/Element/Element.php
      - name: Run PHPUnit
        run: |
          mkdir -p $BROWSERTEST_OUTPUT_DIRECTORY
          cd ~/drupal/web
          #../vendor/bin/phpunit --verbose -c core modules/contrib/webform_civicrm
          #../vendor/bin/phpunit --verbose -c core modules/contrib/webform_civicrm/tests/src/FunctionalJavascript/ExistingContactElementTest.php 
          ../vendor/bin/phpunit --debug --verbose -c core modules/contrib/webform_civicrm/tests/src/FunctionalJavascript/BobSLoginTest.php
        env:
          SYMFONY_DEPRECATIONS_HELPER: 999999
          SIMPLETEST_DB: mysql://root:@127.0.0.1:${{ job.services.mysql.ports[3306] }}/db
          SIMPLETEST_BASE_URL: http://127.0.0.1:8080
          #MINK_DRIVER_ARGS_WEBDRIVER: '["chrome", {"browserName":"chrome","goog:chromeOptions":{"args":["--disable-gpu", "--no-sandbox", "--headless", "--enable-logging", "--log-level=8", "--log-file=/home/runner/drupal/web/sites/simpletest/browser_output/chrome.log"]}}, "http://127.0.0.1:9515"]'
          #MINK_DRIVER_ARGS_WEBDRIVER: '["chrome", {"browserName":"chrome","goog:chromeOptions":{"args":["--disable-gpu", "--no-sandbox", "--headless", "--enable-logging", "--log-level=8", "--log-file=/home/runner/drupal/web/sites/simpletest/browser_output/chrome.log"]}}, "http://127.0.0.1:4444"]'
          #MINK_DRIVER_ARGS_WEBDRIVER: '["chrome", {"browserName":"chrome","goog:chromeOptions":{"args":["--disable-gpu", "--no-sandbox", "--headless=new", "--enable-logging", "--log-level=8", "--log-file=/home/runner/drupal/web/sites/simpletest/browser_output/chrome.log"]}}, "http://127.0.0.1:9515"]'
          #MINK_DRIVER_ARGS_WEBDRIVER: '["chrome", {"browserName":"chrome","goog:chromeOptions":{"args":["--disable-dev-shm-usage", "--disable-gpu", "--no-sandbox", "--headless", "--guest", "--remote-debugging-pipe", "--enable-logging", "--log-level=3", "--log-file=/home/runner/drupal/web/sites/simpletest/browser_output/chrome.log"], "prefs":{"autofill.profile_enabled":false,"credentials_enable_service":false,"profile.password_manager_enabled":false}}}, "http://127.0.0.1:4444"]'
          MINK_DRIVER_ARGS_WEBDRIVER: '["chrome", {"browserName":"chrome","goog:chromeOptions":{"args":["--disable-dev-shm-usageX", "--disable-gpu", "--no-sandbox", "--headless", "--guest", "--remote-debugging-pipe", "--enable-logging", "--log-level=0", "--log-file=/home/runner/drupal/web/sites/simpletest/browser_output/chrome.log"]}}, "http://127.0.0.1:4444"]'
          BROWSERTEST_OUTPUT_DIRECTORY: '/home/runner/drupal/web/sites/simpletest/browser_output'
          DEV_EXTENSION_DIR: /home/runner/drupal/web/sites/default/files/civicrm/ext
          DEV_EXTENSION_URL: http://127.0.0.1:8080/sites/default/files/civicrm/ext
      - name: Helper to make unique name for upload
        if: ${{ failure() || success() }}
        run: |
          # doing this on multiple lines to avoid quote-hell
          cd ${{ runner.temp }}
          echo '${{ matrix.drupal }}_${{ matrix.civicrm }}_${{ matrix.php }}' > upload_helper.txt
          sed -i -e 's/[^0-9a-zA-Z_.\-]//g' upload_helper.txt
          echo "UPLOADNAME=$(cat upload_helper.txt)" >> $GITHUB_ENV
      - uses: actions/upload-artifact@v4
        if: ${{ failure() || success() }}
        with:
          name: screenshots.${{ env.UPLOADNAME }}
          # For some reason Drupal prints here and not our specified BROWSERTEST_OUTPUT_DIRECTORY.
          path: '/home/runner/drupal/web/sites/simpletest/browser_output'
          retention-days: 7
